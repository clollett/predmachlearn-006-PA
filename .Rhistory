sd(mtcars$mpg)
?hist
a <- hist(mtcars$mpg)
a
mpgbreak <- hist(mtcars$mpg,main="mpg",xlab="mpg")
with(mtcars,hist(mpg0,breaks=mpgbreak,main="mpg with automatic",xlab="mpg") )
mpg0 <- mtcars[mtcars$am==0,"mpg"]
with(mtcars,hist(mpg0,breaks=mpgbreak,main="mpg with automatic",xlab="mpg") )
with(mtcars,hist(mpg0,main="mpg with automatic",xlab="mpg") )
with(mtcars,hist(mpg0,breaks=mpgbreak$breaks,main="mpg with automatic",xlab="mpg") )
library(swirl)
swirl()
all <- lm(Fertility ~ .,Swiss)
all <- lm(Fertility ~ .,data=Swiss)
all <- lm(Fertility ~ .,swiss)
summary(all)
summary(lm(Fertility ~ agriculture,swiss))
summary(lm(Fertility ~ Agriculture,swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec <- swiss$Examination+swiss$Catholic
efit <- lm(Fertility ~ .+ec,swiss)
summary(all).coef-summary(efit).coef
all.coef
summary(all).coef
summary(all).coeff
all
all$coefficients-efit$coefficients
InsectSprays
swirl()
6
dim(InsectSprays)
head(InsectSprays,15)
sA
summary(InsectSprays)
summary(InsectSprays[,2])
sapply(InsectSprays,Class())
sapply(InsectSprays,class())
sapply(InsectSprays,class(x))
sapply(InsectSprays[1,],function(x) class(x))
sapply(InsectSprays,class)
fit <- lm(count ~ spray,sapply(InsectSprays,class))
fit <- lm(count ~ spray,InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1,InsectSprays)
summary(nfit)$coef
spray2<- relevel(InsectSprays$spray,sprayC)
spray2<- relevel(InsectSprays$spray,C)
InsectSprays$spray
spray2 <- relevel(InsectSprays$spray,\"C\")"
spray2 <- relevel(InsectSprays$spray,\"C\")
spray2 <- relevel(InsectSprays$spray,"C")
fit2 <- lm(count ~ spray2, swiss)
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(coefficient (fit$coef[3])-coefficient (fit$coef[2]))/1.6011
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
bye()
mtcars
amCorMat <- apply(mtcars[,c(2,3,4,5,6,7,8,10,11)],function(x) cor(x,mtcars$am))
amCorMat <- apply(mtcars[,c(2,3,4,5,6,7,8,10,11)],fun(x) cor(x,mtcars$am))
amCorMat <- apply(mtcars[,c(2,3,4,5,6,7,8,10,11)],fun(x) cor(x,mtcars$am))
?cor
mtcars[,c(2,3,4,5,6,7,8,10,11)]
amCorMat <- apply(mtcars[,c(2,3,4,5,6,7,8,10,11)],2,funtion(x) cor(x,mtcars$am))
amCorMat <- apply(mtcars[,c(2,3,4,5,6,7,8,10,11)],2,funtion(x) mean(x))
as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)])
apply(as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)]),2,mean)
apply(as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)]),2,function(x) cor(x,mtcars$am))
ja <- apply(as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)]),2,function(x) cor(x,mtcars$am))
kable(head(ja, format = "markdown")
)
amCorMat <- data.frame(apply(as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)]),2,function(x) cor(x,mtcars$am)))
amCorMat
names(amCorMat) <- names(mtcars)[c(2,3,4,5,6,7,8,10,11)]
names[mtcars]
?names
names(mtcars)
names(mtcars)[c(2, 3, 4, 5, 6, 7, 8, 10, 11)]
names(amCorMat)
amCorMat <- apply(as.matrix(mtcars[,c(2,3,4,5,6,7,8,10,11)]),2,function(x) cor(x,mtcars$am))
?data.frame
amCorMat
class(amCorMat)
names(amCorMAt)
names(amCorMat)
?kable
kable(head(mtcars), format = "markdown", padding = 0)
amCorMat
str(amCorMat)
myname <- names(amCorMat)
as.vector(amCorMat)
as.matrix(amCorMat)
data.frame(as.matrix(amCorMat))
ja <- data.frame(as.matrix(amCorMat))
ja
names(ja)
names(ja) <- Correlation
names(ja) <- "Correlation
""
)
""
names(ja) <- "Correlation"
ja
library(swirl)
swirl()
dim(WHO)
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit).coef
summary(fit)$coef
lmF <- lm(Numeric ~ Year,hunger[hunger$sex=="Female"])
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex=="Female"])
hunger[hunger$sex=="Female"]
lmF <- lm(Numeric[Sex=="Female"] ~ Year[Sex=="Female"],hunger)
lmM <- lm(Numeric[Sex=="Male"] ~ Year[Sex=="Male"],hunger)
lmBoth <- lm(Numeric ~ Year + Sex)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit,which=1)
fitno <- lm(y ~ x, out2[-1,])
plot(fit,which=1)
plot(fitno,which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sum(resid(fit))/deviance(fit)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which=3)
plot(fit,which=2)
sigma1 <- sqrt(deviance(fitno)/(df.resid(fitno)))
sigma1 <- sqrt(deviance(fitno)/(df.residual(fitno)))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1])
)
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2)/(2*sigma^2)
plot(fit, which=5).
plot(fit, which=5)
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . - Examination)
mdl2 <- lm(Fertility ~ . - Examination, swiss)
vif(mdl2)
bye()
?mtcars
vif(lm(mpg ~ ., mtcars))
library(car)
vif(lm(mpg ~ ., mtcars))
sqrt(vif(lm(mpg ~ ., mtcars)))
dim(mtcars)
?z.test2sam
mpg0 <- mtcars[mtcars$am==0,"mpg"]
mpg1 <- mtcars[mtcars$am==1,"mpg"]
z.test(mpg0,mpg1)
?t.test
?z.test
mean(mpg0)
dim(mpg0)
mpg0
length(mpg0)
length(mpg1)
t.test(mpg0,mpg1)
t.test(mpg0,mpg1,alternative="greater")
t.test(mpg0,mpg1,alternative="less")
17.14737-24.39231
?cor
selectedmdl<- lm(mpg ~ am+hp+qsec+vs+carb,mtcars)
summary(selectedmdl)
sqrt(vif(selectedmdl))
selectedmdl<- lm(mpg ~ am+hp,mtcars)
summary(selectedmdl)
?mtcars
mean(mtcars$hp)
selected2mdl<- lm(mpg ~ am+hp-146.6875,mtcars)
selected2mdl<- lm(mpg ~ am+(hp-146.6875),mtcars)
selected2mdl<- lm(mpg ~ am+I(hp-mean(hp)),mtcars)
summary(selected2mdl)
mpgauto=mtcars[mtcars$am==0,c("mpg","hp")]
mpgmanual=mtcars[mtcars$am==1,c("mpg","hp")]
summary(lm(mpg~hp,mpgauto))
summary(lm(mpg~hp,mpgmanual))
str(mtcars)
resid(allvarmdl)
allvarmdl<- lm(mpg~.,mtcars)
resid(allvarmdl)
dim(resid(allvarmdl))
length(resid(allvarmdl))
plot(mtcars$mpg, resid(allvarmdl),main="All variables")
plot(allvarmdl)
summary(allvarmdl)
summary(ammdl)
ammdl<- lm(mpg~am,mtcars)
summary(ammdl)$coef
ammdl<- lm(mpg~am,mtcars)
summary(ammdl)
summary(selected2mdl)
ja <- t.test(mpg0,mpg1,alternative="less")
ja
ja[3]
allvarmdl
ja <- summary(allvarmdl)
ja
c(summary(allvarmdl)$sigma,summary(allvarmdl)$r.squared,summary(allvarmdl)$adj.r.squared)
ja$coef
?summary
ja
ja$coefficients
ja$aliased
fit <- lm(mpg,cyl+wt,mtcars)
mtcars
fit <- lm(mpg ~ cyl+wt,mtcars)
summary(fit)
fit <- lm(mpg ~ factor(cyl)+wt,mtcars)
summary(fit)
fit2 <- lm(mpg ~ factor(cyl)+wt+wt*cyl,mtcars)
summary(fit2)
fit4 <- lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary(fit4)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit5 <- lm(y~x)
hatvalues(fit5)
dfbetas(fit5)
fit1 <- lm(mpg,factor(cyl)+wt,mtcars)
fit1 <- lm(mpg~factor(cyl)+wt,mtcars)
fit2 <- lm(mpg~factor(cyl)*wt,mtcars)
fit3 <- lm(mpg~cyl*wt,mtcars)
summary(fit1)
summary(fit2)
anova(lm(mpg~wt*factor(cyl),mtcars))
summary(lm(mpg~factor(cyl)))
summary(lm(mpg~factor(cyl),mtcars)
)
summary(lm(mpg~factor(cyl)+wt,mtcars))
library(swirl)
swirl()
x1c <- simbias()
apply(x1c,1,mean)
fit1 <- lm(Fertility~Agriculture,swiss)
fit3 <- lm(Fertility~Agriculture+Examination+Education,swiss)
anova(fit1,fit3)
deviance(fit3)
d <- deviance(fit3)/43
n <- (deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
ravenData
mdl <- glm(ravenWinNum ~ ravenScore,"binomial",ravenData)
lodds <- predict(mdl,data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
exp(confint(mdl,'date'))
which.max(hits[,'visits']
)
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits~date,poisson,hits,offset=log(visits+1))
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
qpois(.95, mdl2$fitted.values[704])
bye()
?shuttle
library(MASS)
?shuttle
mdlsh <- glm(use~wind,shuttle,"binomial")
mdlsh <- glm(use~wind,shuttle,binomial)
?glm
mdlsh <- glm(use~wind,binomial,shuttle)
summary(mdl)
summary(mdlsh)
predict(mdlsh,"head")
shuttle
?predict
mdlsh
predict(mdlsh)
head(shuttle)
head(predict(mdl))
head(predict(mdlsh))
head(predict(mdlsh))[c(3,4)]
lodds <- exp(head(predict(mdlsh))[c(3,4)])
lodds
lodds/2
mlodds <- lodds/(1+lodds)
mlodds
mlodds[1]/mlodds[2]
lodds[1]/lodds[2]
summary(mdlsh)
odds2prob <- fun(k) { exp(k)/(1+exp(k))}
odds2prob <- function(k) { exp(k)/(1+exp(k))}
odds2prob(-0.25131)
odds2prob(-0.25131-0.03181)
odds2prob(-0.25131-0.03181)/odds2prob(-0.25131)
mdlsh <- glm(use~wind,shuttle)
mdlsh <- glm(use~wind,logistic,shuttle)
summary(mdlsh)
odds2prob(-0.03181)
mdlsh <- glm(use~wind,logistic,binomial,shuttle)
mdlsh <- glm(use~wind,binomial,shuttle)
summary(mdlsh)
mdlshi <- glm((1-use)~wind,binomial,shuttle)
mdlshi <- glm(I(1-use)~wind,binomial,shuttle)
shuttlemas <- 1-shuttle$auto
shuttlemas
shuttle$auto
shuttle
shuttlemas <- 1-shuttle$use
shuttlemas <- I(1-shuttle$use)
shuttle$use
spraymld <- glm(comapring~factor(spray),poisson,InsectSprays)
InsectSprays
spraymld <- glm(count~factor(spray),poisson,InsectSprays)
summary(spraymld)
spraymld$fitted
InsectSprays$spray
14.5/15.3333333
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
xMat
yhat <- predict(lm(y ~ xMat - 1))
yhat
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
4.8827566/5
(4.8827566--0.1825806)/5
library(MASS)
fit1 <- glm(use~wind,binomial,shuttle)
summary(fit1)
predict(fit1)
a <- exp(-0.2513144)
b <- exp(-0.2831263)
a/b
b/a
exp(fit1$coef)
?shuttle
fit2 <- glm(use~wind+magn,binomial,shuttle)
summary(fit2)
exp(fit2$coef)
library(MASS)
fit31 <- glm(use~wind,binomial,shuttle)
fit32 <- glm((1-as.numeric(use))~wind,binomial,shuttle)
as.numeric(shuttle$use)
3-as.numeric(shuttle$use)
fit32 <- glm((3-as.numeric(use))~wind,binomial,shuttle)
fit32 <- glm(I(3-as.numeric(use))~wind,binomial,shuttle)
fit32 <- glm((2-as.numeric(use))~wind,binomial,shuttle)
summary(fit31)
summary(fit33)
summary(fit32)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda"
load("./data/gaData.rda")
gaData$julian <- julian(gaData$date)
head(gaData)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./gaData.rda")
load("./gaData.rda")
gaData$julian <- julian(gaData$date)
lm1 <- lm(gaData$visits ~ gaData$julian
)
count <- gaData$simplystats
x <- julian(gaData$date)
t <- log(gaData$visits+1)
t2 <- log(10)+t
glm1 <- glm(count ~ x + offset(t), family = poisson)
glm2 <- glm(count ~ x + offset(t2), family = poisson)
summary(glm1)
summary(glm2)
setwd("~/GitHub/predmachlearn-006-PA")
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv",dest="pml-training.csv")
download.file("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv",dest="pml-testing.csv")
pmltraining=read.csv("pml-training.csv")
pmltesting=read.csv("pml-testing.csv")
pmltrainingV2=pmltraining[,colSums(is.na(training)) != nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) != nrow(pmltraining)]
str(pmltraining)
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.8*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.9*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.99*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.2*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.1*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.01*nrow(pmltraining)]
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.001*nrow(pmltraining)]
str(pmltrainingV2)
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) ==0]
pmltestingV2=pmltesting[,colSums(is.na(pmltesting)) ==0]
pmltraining=read.csv("pml-training.csv")
pmltrainingV2=pmltraining[,colSums(is.na(pmltraining)) < 0.001*nrow(pmltraining)]
str(pmltrainingV2)
library(Hmisc)
pmltraincorrs <- rcorr(pmltrainingV2,type="pearson")
pmltraincorrs <- cor(pmltrainingV2,use="complete.obs", method="pearson")
plmtrainingV2$X
plmtrainingV2$X
pmltrainingV2$X
max(pmltrainingV2$X)
str(pmltrainingV2)
pmltrainingV3 <- as.numeric(pmltrainingV2)
convert2numeric <- function(obj){
out <- lapply(obj, as.numeric)
as.data.frame(out)
}
pmltrainingV3 <- convert2numeric(pmltrainingV2)
str(pmltrainingV3)
pmltraincorrs <- rcorr(pmltrainingV3,type="pearson")
pmltraincorrs <- cor(pmltrainingV3,use="complete.obs", method="pearson")
pmltraincorrs
tail(pmltraincorrs,1)
outcomecor <- tail(pmltraincorrs,1)
plot(outcomecor)
outcomecor <- as.data.frame(tail(pmltraincorrs,1))
plot(outcomecor)
outcomecor
hist(outcomecor)
hist(abs(outcomecor)
)
plot(outcomecor)
outcomecor <- as.data.frame(t(tail(pmltraincorrs,1)))
plot(outcomecor)
hist(outcomecor)
hist(outcomecor,10)
?hist
hist(outcomecor,nclass=10)
hist(outcomecor,nclass=5)
outcomecor[outcomecor$classe>0.2]
outcomecor[outcomecor$classe>0.2,]
pmltrainingV4 <- data.Normalization(pmltrainingV3,type="n1",normalization="column")
install.packages("clusterSim")
pmltrainingV4 <- data.Normalization(pmltrainingV3,type="n1",normalization="column")
library(clusterSim)
pmltrainingV4 <- data.Normalization(pmltrainingV3,type="n1",normalization="column")
str(pmltrainingV4)
pmltraincorrs <- rcorr(pmltrainingV4,type="pearson")
pmltraincorrs <- cor(pmltrainingV4,use="complete.obs", method="pearson")
outcomecor <- as.data.frame(t(tail(pmltraincorrs,1)))
hist(outcomecor,nclass=10)
hist(outcomecor,nclass=5)
preProc=preProcess(pmltrainingV4[,8:92],method="pca",thres=0.8)
library(cart)
library(caret)
install.packages("caret")
library(caret)
preProc=preProcess(pmltrainingV4[,8:92],method="pca",thres=0.8)
preProc
preProc=preProcess(pmltrainingV4[,8:92],method="pca",thres=0.9)
preProc
testcor <- cor(pmltrainingV4[,c(8:15,93])
testcor <- cor(pmltrainingV4[,c(8:15,93)])
testcor
testcor <- cor(pmltrainingV4[,c(8:14,93)])
testcor
cormatrix <- cor(pmltrainingV4[,c(8:14,93)])
cormatrix
dim(cormatrix)
dim(cormatrix,2)
dim(cormatrix)[1]
m=dim(cormatrix)[1]
m
mean(cormatrix[m,1:m-1]
)
diag(cormatrix)
sum(cormatrix[1:m-1,1:m-1])
sum(diag(cormatrix))
k=dim(cormatrix)[1]-1
rcf <- mean(cormatrix[k+1,1:k])
k
rcf
rff <- (sum(cormatrix[1:k,1:k])-k)/((k*(k-1))
)
rff <- (sum(cormatrix[1:k,1:k])-k)/(k*(k-1))
rff
calculateCFS <- function(cormatrix) {
k=dim(cormatrix)[1]-1
rcf <- mean(cormatrix[k+1,1:k])
rff <- (sum(cormatrix[1:k,1:k])-k)/(k*(k-1))
(k*rcf)/(sqrt(k+k*(k-1)*rff))
}
calculateCFS(cormatrix)
